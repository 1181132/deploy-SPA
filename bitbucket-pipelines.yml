#  Template .NET Core build

#  This template allows you to validate your .NET Core package.
#  The workflow allows running tests and code linting on the default branch.

# To run your pipeline on a Windows machine, create a self-hosted Windows runner.
# For instructions on setting up a Windows runner, see https://support.atlassian.com/bitbucket-cloud/docs/set-up-runners-for-windows/

# image: node:19.2

pipelines:
  branches:
    master:
      - parallel:
          - step:
              name: Build and Test .NET
              image: mcr.microsoft.com/dotnet/sdk:6.0
              caches:
                - dotnetcore
              script:
                - cd Armazem_MasterData
                - dotnet restore
                - dotnet build
                - dotnet test
                - cd ..
                - cd ArmazemDotNetTeste
                - dotnet restore
                - dotnet build
                - dotnet test

          - step:
              name: Build and Test Node
              image: node:19.2
              caches:
                - node
              script:
                - cd lapr5nodejs
                - npm install
                - npm run
                # - npm test

          - step:
              name: Installation & Build & Deploy SPA
              image: node:19.2
              caches:
                - node
              script:
                - cd SPA
                - npm install
                - npm install -g @angular/cli@
                - ng build --configuration production
                - ng serve --open

          - step:
              name: Deploy to Heroku in production
              deployment: production
              script:
                - pipe: atlassian/heroku-deploy:1.2.1
                  variables:
                    HEROKU_API_KEY: $HEROKU_API_KEY
                    HEROKU_APP_NAME: $HEROKU_APP_NAME

        # - step:
        #     name: Installation & Build & Deploy
        #     image: node:18.12
        #     caches:
        #       - node
        #     script:
        #       - cd SPA
        #       - npm install
        #       - npm install -g @angular/cli@14.2.0
        #       - ng build --configuration production
        #       - echo "$(ls -la)"
        #       - echo "$(ls -la dist)"
        #       - apt-get update
        #       - apt-get install sshpass -y
        #       - time sshpass -p $Password scp -o StrictHostKeyChecking=no -o LogLevel=DEBUG -P 10682 -r dist/ root@vsgate-ssh.dei.isep.ipp.pt:/root/lei_2223_sem5_pi/Angular
